
Map集合：
    特点：
        1、Map集合是一个双列集合，一个元素包含两个值(key, value)
        2、key和value的数据类型可以相同，也可以不同
        3、Map集合中的元素，key是不允许重复的，但是value是可以重复的
        4、Map集合中的元素的key和value是一一对应的
    Map的常用子类：
        HashMap实现了Map集合
        特点：
            1、底层是哈希表，查询的速度特别的快 数组 + 单向链表/红黑树，当链表的长度大于8时，使用红黑树
            2、HashMap集合是一个无序的集合，存储元素和取出元素的顺序有可能是不一样的
        LinkedHashMap
        特点：
            1、底层是哈希表 + 链表 (链表是为了保证有序)
            2、是一个有序的集合，存储元素和取出元素的顺序是一致的

    遍历map的key找值：
        keySet，将Map中所有的key取出来，存储到set集合中，遍历set可以使用迭代器或者增强for循环，再使用getKey方法
        通过key来获取value

    Map接口中的内部接口Entry
        作用： 当Map集合对象被创建的时候，就会自动创建一个Entry对象，用来记录键值对，也称了键值对对象
        Map对象相当于连接符，用来建立键值之间的关系，将Map集合内部的Entry对象取出来，存储到Set集合中
        遍历Set集合，获取集合中所有的Entry对象
        Entry对象的方法：getKey() 获取key getValue 获取值

    使用HashMap存储自定义类型的键值
        要保证key是唯一的，所以必须重写hashCode方法和equals方法，以保证唯一性

    LinkedHashMap继承了HashMap
        特点：
            底层为Hash表 + 链表(用来记录元素的顺序)
    Hashtable集合 实现了Map
        特点：
            1、底层是哈希表，查找速度较慢
            2、线程安全的集合，单线程。
            3、之前学到的所有Map集合，都允许为空，但是Hashtable不允许键值对中的任意一个为空
            4、其他的都已经停止使用，只有Properties集合在使用，因为Properties是唯一一个与IO流相结合的集合

JDK9的新特性：
    list、set、Map接口，里面添加一个静态方法of,可以一次性给集合中添加多个元素
    static <E> list<E> of(E...ele)
    适用前提：
        当集合中存储的元素个数已经确定，不会进行改变
    注意事项：
        1、of方法只适应于list、set、map接口，不适用于实现类
        2、of的返回值是一个不能改变的集合，集合不能再使用add/put方法添加元素
        3、set、map接口在调用of时，不能有重复的接口，否则会抛出异常





