
面向过程：
    当需要实现一个功能的时候，每个步骤都要详细的处理每一个细节

面向对象：
    当需要实现一个功能时，不关心具体的实现步骤，而是直接使用实现该功能的方法
    成员变量：
        1、直接定义在类当中的，直接定义在方法的外边
        2、成员方法不写static关键字
    通常情况下：
        一个类不能直接使用，需要根据一个类创建一个对象，才能使用
        1、导包：指出需要使用的类在什么位置
            import 包名称.类名称
            若使用的类和当前类在同一包中的情况，可以省略导包语句不写
            只有在java.lang下的包不需要导包，其余的都需要import语句
        2、创建
            类名称 对象名 = new 类名称();
        3、使用
            使用成员变量：对象名.成员变量名
            使用成员方法：对象名.成员方法(参数)
    当把一个对象作为参数传入到方法中时，传入的其实是对象的地址值,栈中的属性值其实是创建在堆中属性值的地址，真正的数据存在堆中

成员变量与局部变量的区别：
    1、定义的位置不一样
        局部变量：在方法的内部
        成员变量：在方法的外部，直接定义在类中
    2、作用的范围不一样
        局部变量：旨在方法中可以使用，出了方法就不能再用了
        成员变量：整个类中都是通用的
    3、默认值不一样
        局部变量：没有默认值，若要进行使用必须手动进行赋值，赋值以后才能使用
        成员变量：具有默认值
    4、在内存的位置不一样
        局部变量：位于栈内存
        成员变量：位于堆内存
    5、生命周期不一样
        成员变量：随着对象的创建而诞生，随着对象的销毁而回收
        局部变量：随着方法进栈而诞生，随着方法出栈而销毁

构造方法：
    构造方法是专门创建对象的方法，当我们使用new来创建对象的时候，其实就是在调用构造方法
    格式：
        public 类名称(参数类型 参数名称){
            方法体;
        }
    注意事项：
        1、构造方法的名称必须和所在的类名称完全一样，就连大小写也要一样
        2、构造方法不要写返回值类型，连void都不要写
        3、构造方法不能return返回值
        4、若没有编写任何构造方法，编译器会自动生成一个没有参数的构造方法
        5、一旦编写了至少一个构造方法，那么编译器将不再自动创建构造方法
        6、构造方法也是可以进行重载的

构造一个标准的类：
    1、所有的成员变量都是使用关键字private
    2、为每一个成员变量都编写一对setxxx和getxxx
    3、编写一个无参数的构造方法
    4、编写一个全参数的构造方法
    一个标准的类叫做java bean

面向对象的三大特征：
    1、封装：就是将一些细节信息隐藏起来，对于外界不可见
        封装在java中的体现：
            1、方法就是一种封装
            2、关键字private也是一种封装.
        private:一旦 使用private进行修饰，本类之中任然可以随意访问，但是出了本类范围之外就不可以进行访问了
            间接访问private就是定义一对setter和getter方法，必须叫做setxxx：不能有返回值，参数类型与成员变量对应和getxxx:不能有参数，返回类型与成员变量对应
            当成员变量和局部变量重名时，根据就近原则，会优先使用参数
            当需要访问本类中的成员变量时可以使用this.成员变量；通过谁调用的方法，谁就是this，相当于python中的self
    2、继承

    3、多态

常用的API：
    1、Scanner类
        通过该类可以使用键盘输入数据到程序当中。
        引用类型的一般使用步骤：
            1、导包，2、创建，3、使用
        import java.util.Scanner;
        Scanner sc = new Scanner(System.in); System.in表示从键盘进行输入
        获取键盘上的一个int型 sc.nextInt(); 返回的是int 获取键盘上的一个String型 sc.next();
        键盘上输入的内容其实都是字符串，nextInt就是将字符串转化为Int型，但是next就直接获取字符串即可

匿名对象：
    创建对象的标准格式：
        类名称 对象名 = new 类名称();
    匿名对象声明：
        new 类名称();
    匿名对象的使用:
        new 类名称().成员变量  new 类名称().方法
    注意事项：
        匿名对象只能创建唯一的一次，下次再用不得不再创建一个对象，若对象只使用一次，那么就可以使用匿名对象
    使用匿名对象进行参数的传递：
        methodParam(new 类名称());


